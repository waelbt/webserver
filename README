Getting to Grips with Socket APIs / Chapter 2 / 65
note that the TCP client could call bind() before connect() if it is particular about
which network interface is being used to connect with. This is sometimes important on
servers that have multiple network interfaces. It's often not important for general purpose
software.


If nothing has been received yet,recv() blocks until it has something. If the connection is terminated by the client, recv() returns 0 or -1

It is a common mistake to try
    printing data that's received from recv() directly as a C string. There is no guarantee that
    the data received from recv() is null terminated!

send() returns the number of bytes sent. You should generally check that the number of
bytes sent was as expected, and you should attempt to send the rest if it's not. We are
ignoring that detail here for simplicity

If we don't close the connection, the browser will just wait for more data until it times out.
At this point, we could call accept() on socket_listen to accept additional connections.
That is exactly what a real server would do. However, as this is just a quick example
program, we will instead close the listening socket too and terminate the program